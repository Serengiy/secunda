## Autogenerated by Scribe. DO NOT MODIFY.

name: 'Company management'
description: ''
endpoints:
  -
    custom: []
    httpMethods:
      - GET
    uri: api/companies
    metadata:
      custom: []
      groupName: 'Company management'
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Get paginated list of companies.'
      description: ''
      authenticated: false
      deprecated: false
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters:
      per_page:
        custom: []
        name: per_page
        description: 'The number of items per page. Default is 15.'
        required: false
        example: 10
        type: integer
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        deprecated: false
    cleanQueryParameters:
      per_page: 10
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        custom: []
        status: 200
        content: |-
          {
            "data": [
              {
                "id": 1,
                "name": "Company 1",
                "building": {
                    "id": 1,
                    "address": "Some address"
                },
                "activities": [
                    {"id": 1, "name": "Activity 1"}
                ]
              }
            ],
            "links": {...},
            "meta": {...}
          }
        headers: []
        description: ''
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
  -
    custom: []
    httpMethods:
      - GET
    uri: 'api/companies/activity/{activity_id}'
    metadata:
      custom: []
      groupName: 'Company management'
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Get companies by activity (including child activities).'
      description: ''
      authenticated: false
      deprecated: false
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      activity_id:
        custom: []
        name: activity_id
        description: 'The ID of the activity.'
        required: true
        example: 16
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        deprecated: false
      activity:
        custom: []
        name: activity
        description: 'The ID of the activity'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        deprecated: false
    cleanUrlParameters:
      activity_id: 16
      activity: 1
    queryParameters:
      per_page:
        custom: []
        name: per_page
        description: 'The number of items per page. Default is 15.'
        required: false
        example: 10
        type: integer
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        deprecated: false
    cleanQueryParameters:
      per_page: 10
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        custom: []
        status: 200
        content: |-
          {
            "data": [
              {
                "id": 1,
                "name": "Company 1",
                "building": {...},
                "activities": [...]
              }
            ],
            "links": {...},
            "meta": {...}
          }
        headers: []
        description: ''
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
  -
    custom: []
    httpMethods:
      - GET
    uri: api/companies/nearest
    metadata:
      custom: []
      groupName: 'Company management'
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Get companies nearest to a given location within a radius.'
      description: ''
      authenticated: false
      deprecated: false
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters:
      latitude:
        custom: []
        name: latitude
        description: Latitude
        required: true
        example: 37.7749
        type: number
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        deprecated: false
      longitude:
        custom: []
        name: longitude
        description: Longitude
        required: true
        example: -122.4194
        type: number
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        deprecated: false
      radius:
        custom: []
        name: radius
        description: 'The search radius in km. Default is 1.'
        required: false
        example: 5.0
        type: number
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        deprecated: false
    cleanQueryParameters:
      latitude: 37.7749
      longitude: -122.4194
      radius: 5.0
    bodyParameters:
      latitude:
        custom: []
        name: latitude
        description: 'Must be between -90 and 90.'
        required: true
        example: -89
        type: number
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        deprecated: false
      longitude:
        custom: []
        name: longitude
        description: 'Must be between -180 and 180.'
        required: true
        example: -179
        type: number
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        deprecated: false
      radius:
        custom: []
        name: radius
        description: 'Must be at least 0.1. Must not be greater than 50.'
        required: true
        example: 7
        type: number
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        deprecated: false
      per_page:
        custom: []
        name: per_page
        description: 'Must be at least 1. Must not be greater than 100.'
        required: false
        example: 16
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        deprecated: false
    cleanBodyParameters:
      latitude: -89
      longitude: -179
      radius: 7
      per_page: 16
    fileParameters: []
    responses:
      -
        custom: []
        status: 200
        content: |-
          {
            "data": [
              {
                "id": 1,
                "name": "Company 1",
                "building": {...},
                "activities": [...]
              }
            ],
            "links": {...},
            "meta": {...}
          }
        headers: []
        description: ''
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
  -
    custom: []
    httpMethods:
      - GET
    uri: 'api/companies/{company_id}'
    metadata:
      custom: []
      groupName: 'Company management'
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Get a single company by ID.'
      description: ''
      authenticated: false
      deprecated: false
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      company_id:
        custom: []
        name: company_id
        description: 'The ID of the company.'
        required: true
        example: 16
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        deprecated: false
      company:
        custom: []
        name: company
        description: 'The ID of the company'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        deprecated: false
    cleanUrlParameters:
      company_id: 16
      company: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        custom: []
        status: 200
        content: |-
          {
            "data": {
                "id": 1,
                "name": "Company 1",
                "building": {...},
                "activities": [...]
            }
          }
        headers: []
        description: ''
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
